from had.shourtcuts import render, redirect, error_render, RenderSettings, json_render
from project import settings
# from project.shourtcuts import redirect_for_slug, reverse_for_slug
# import random
# try:
#   import boto3
#   from botocore.exceptions import ClientError
#   from boto3.dynamodb.conditions import Key, Attr
# except ModuleNotFoundError:
#   pass
# import traceback
import base64
import os
import io
import cgi
import datetime
import logging
import json
logger = logging.getLogger()
logger.setLevel(logging.INFO)

def get(request, username, name):
  return error_render(request, error_message = f"{username}, {name}")

def post(request, username):
  import boto3
  # リクエストボディからJSONデータを取得
  body_json = json.loads(request.event['body'])
  file_name = body_json.get('fileName')
  file_type = body_json.get('fileType')
  base64_data = body_json.get('data')
  # Base64データをデコード
  image_data = base64.b64decode(base64_data)
  # S3に保存するファイル名を設定（例: ファイル名にランダムなIDを追加してユニークにする）
  bucket_name = settings.AWS["S3"]["bucket"]
  # S3にアップロード
  s3_client = boto3.client('s3')
  s3_client.put_object(
      Bucket=bucket_name,
      Key=os.path.join("had/test", f"test-{datetime.datetime.now().strftime('%Y%m%d%H%M%S')}.png"), 
      Body=image_data,
      ContentType=file_type  # MIMEタイプを指定
  )
  logger.info(f"END")
  return json_render(request, {"message": "success", "url": "/hoge/hoge"})

def post_old(request, username):
  logger.info(f"TEST LOG")
  logger.info(request.event.__class__)
  logger.info(request.event)
  # raise Exception("TEST")
  import boto3
  s3 = boto3.client('s3')
  is_base64_encoded = request.event["isBase64Encoded"]
  # 画像データをデコード
  if is_base64_encoded:
    # image_data = base64.b64decode(request.body)
    image_data = base64.b64decode(request.event["body"])
  else:
    image_data = request.event["body"]
  # image_data = base64.b64decode(request.event["body"])
  # image_data = request.event["body"]
  # ファイル名の取得（例: クエリパラメータやヘッダーから取得）
  image_data_encode = image_data.encode("utf-8")
  # S3バケットにアップロード
  bucket_name = settings.AWS["S3"]["bucket"]
  s3.put_object(
    Bucket=bucket_name, 
    Key=os.path.join("had/test", f"event-{datetime.datetime.now().strftime('%Y%m%d%H%M%S')}.json"), 
    Body=json.dumps(request.event, indent=2),
  )
  s3.put_object(
    Bucket=bucket_name, 
    # Key=os.path.join("had/test", f"event-{datetime.datetime.now().strftime('%Y%m%d%H%M%S')}.json"), 
    Key=os.path.join("had/test", f"test-{datetime.datetime.now().strftime('%Y%m%d%H%M%S')}.png"), 
    # Body=json.dumps(request.event, indent=2),
    # Body=image_data,
    Body=image_data_encode,
    ContentType="image/png"
  )
  print("s3.put_object")
  # return error_render(request, error_message = f"{username}\n, {request.body.keys()},\n{request.body.values()}")
  return json_render(request, {"message": "success"})

